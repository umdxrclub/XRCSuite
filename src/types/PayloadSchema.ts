/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    admins: Admin;
    members: Member;
    devices: Device;
    heartbeats: Heartbeat;
    attendances: Attendance;
    events: Event;
    descriptions: Description;
    messages: Message;
    software: Software;
    projects: Project;
    media: Media;
    schedules: Schedule;
    polls: Poll;
    stats: Stat;
    roles: Role;
    integrations: Integration;
    experiences: Experience;
    opportunities: Opportunity;
    carousels: Carousel;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    lab: Lab;
    bot: Bot;
    cas: CAS;
    wishlist: Wishlist;
    odoo: Odoo;
    trello: Trello;
    gapi: Gapi;
  };
}
export interface Admin {
  id: string;
  casManager?: boolean | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
export interface Member {
  id: string;
  name: string;
  nickname?: string | null;
  birthday?: string | null;
  email?: string | null;
  isClubMember?: boolean | null;
  roles?: (string | Role)[] | null;
  profile?: {
    picture?: string | Media | null;
    links?:
      | {
          type: string | Integration;
          url: string;
          id?: string | null;
        }[]
      | null;
    bio?: string | null;
  };
  umd?: {
    directoryId?: string | null;
    cardSerial?: string | null;
    terplink?: {
      accountId?: string | null;
      issuanceId?: string | null;
      communityId?: string | null;
    };
  };
  integrations?: {
    discord?: string | null;
    oculus?: string | null;
    steam?: string | null;
    scoresaber?: string | null;
    trello?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface Role {
  id: string;
  name: string;
  color?: string | null;
  priority: number;
  discordRoleId?: string | null;
  discordEmoji?: string | null;
  isLeadership: boolean;
  isSelfAssignable: boolean;
}
export interface Media {
  id: string;
  isPublic?: boolean | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
export interface Integration {
  id: string;
  name?: string | null;
  discordEmoji?: string | null;
}
export interface Device {
  id: string;
  name: string;
  description?: (string | null) | Description;
  public: boolean;
  status: 'inLab' | 'checkedOut';
  serial?: string | null;
  mac?: string | null;
  departmentTag?: string | null;
  xrTag?: string | null;
  dateReceived?: string | null;
  lastAudited?: string | null;
  items?:
    | {
        name: string;
        quantity: number;
        serialNumber?: string | null;
        departmentTag?: string | null;
        xrTag?: string | null;
        notes?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Description {
  id: string;
  name: string;
  image?: string | Media | null;
  type:
    | 'h_vr'
    | 'h_ar'
    | 'h_xr'
    | 'h_vr_accessory'
    | 'h_pc'
    | 'h_laptop'
    | 'h_console'
    | 'h_phone'
    | 'h_misc'
    | 's_game'
    | 's_software';
  description: string;
  updatedAt: string;
  createdAt: string;
}
export interface Heartbeat {
  id: string;
  device?: (string | null) | Device;
  date?: string | null;
  /**
   * @minItems 2
   * @maxItems 2
   */
  location?: [number, number] | null;
  battery?: {
    level?: number | null;
    charging?: boolean | null;
  };
  network?: {
    ipAddress?: string | null;
    wifi?: {
      current?: {
        ssid?: string | null;
        bssid?: string | null;
        level?: number | null;
      };
      nearbyNetworks?:
        | {
            ssid?: string | null;
            bssid?: string | null;
            level?: number | null;
            id?: string | null;
          }[]
        | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
export interface Attendance {
  id: string;
  member?: (string | null) | Member;
  date?: string | null;
  event?: (string | null) | Event;
  type?: ('in' | 'out') | null;
  updatedAt: string;
  createdAt: string;
}
export interface Event {
  id: string;
  isPublished: boolean;
  name: string;
  type?: string | null;
  location?: {
    irl?: string | null;
    online?: string | null;
  };
  startDate: string;
  endDate: string;
  description?: string | null;
  thumbnail?: string | null;
  discord: {
    createGuildEvent: boolean;
    createEmbedMessage: boolean;
    eventMessages?:
      | {
          messageId: string;
          channelId: string;
          id?: string | null;
        }[]
      | null;
    guildEvents?:
      | {
          eventId: string;
          guildId: string;
          id?: string | null;
        }[]
      | null;
  };
  gcal?: {
    publishOnGCal?: boolean | null;
    events?:
      | {
          eventId: string;
          calendarId: string;
          id?: string | null;
        }[]
      | null;
  };
  terplink?: {
    eventId?: string | null;
    accessCode?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface Message {
  id: string;
  name: string;
  useMessageContent: boolean;
  channels?:
    | {
        channelId: string;
        alwaysResendMessages: boolean;
        messages?:
          | {
              messageId: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  publish?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
export interface Software {
  id: string;
  type?: (string | null) | Description;
  availableOn?: (string | Device)[] | null;
  publish?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
export interface Project {
  id: string;
  name?: string | null;
  status?: ('Proposed' | 'Active' | 'Inactive' | 'Finished') | null;
  projectLeads?: (string | Member)[] | null;
  members?: (string | Member)[] | null;
  logo?: string | Media | null;
  banner?: string | Media | null;
  gallery?:
    | {
        image?: string | Media | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  startDate?: string | null;
  endDate?: string | null;
  description?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
}
export interface Schedule {
  id: string;
  name: string;
  schedule?: {
    sunday?:
      | (
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              staff?: (string | Member)[] | null;
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'opening';
            }
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'closing';
            }
        )[]
      | null;
    monday?:
      | (
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              staff?: (string | Member)[] | null;
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'opening';
            }
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'closing';
            }
        )[]
      | null;
    tuesday?:
      | (
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              staff?: (string | Member)[] | null;
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'opening';
            }
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'closing';
            }
        )[]
      | null;
    wednesday?:
      | (
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              staff?: (string | Member)[] | null;
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'opening';
            }
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'closing';
            }
        )[]
      | null;
    thursday?:
      | (
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              staff?: (string | Member)[] | null;
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'opening';
            }
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'closing';
            }
        )[]
      | null;
    friday?:
      | (
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              staff?: (string | Member)[] | null;
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'opening';
            }
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'closing';
            }
        )[]
      | null;
    saturday?:
      | (
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              staff?: (string | Member)[] | null;
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'opening';
            }
          | {
              time: {
                allDay: boolean;
                from?: string | null;
                to?: string | null;
              };
              note?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'closing';
            }
        )[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface Poll {
  id: string;
  title: string;
  open: boolean;
  allowRevote?: boolean | null;
  author: string;
  messages?:
    | {
        channel: string;
        msg: string;
        id?: string | null;
      }[]
    | null;
  choices?:
    | {
        name: string;
        voters?:
          | {
              id: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Stat {
  id: string;
  date?: string | null;
  count?: {
    discord?: number | null;
    terplink?: number | null;
    youtube?: number | null;
    instagram?: number | null;
    twitter?: number | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface Experience {
  id: string;
  name: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface Opportunity {
  id: string;
  name: string;
  url?: string | null;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface Carousel {
  id: string;
  name: string;
  interval: number;
  slides: {
    title?: string | null;
    text?: string | null;
    image?: string | Media | null;
    fit: 'cover' | 'contain';
    id?: string | null;
    blockName?: string | null;
    blockType: 'imageAndText';
  }[];
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'admins';
    value: string | Admin;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface Lab {
  id: string;
  open: boolean;
  event?: (string | null) | Event;
  members?: (string | Member)[] | null;
  schedule?: (string | null) | Schedule;
  odoo?: {
    contractId?: number | null;
  };
  media?: {
    gatekeeper?: {
      acceptSound?: string | Media | null;
      rejectSound?: string | Media | null;
    };
    labOpenImage?: string | Media | null;
    labClosedImage?: string | Media | null;
    tvBanner?: string | Media | null;
  };
  discord?: {
    labMessage?: (string | null) | Message;
    labControlMessage?: (string | null) | Message;
    inventoryMessage?: (string | null) | Message;
    labNotificationsRole?: (string | null) | Role;
  };
  settings?: {
    startupLabWhenFirstCheckIn?: boolean | null;
    shutdownLabWhenAllCheckedOut?: boolean | null;
    notifyStatus?: boolean | null;
    notifyLeadershipCheckInOut?: boolean | null;
    rolesToAnnounce?: (string | Role)[] | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface Bot {
  id: string;
  enabled?: boolean | null;
  auth?: {
    clientId?: string | null;
    clientSecret?: string | null;
    token?: string | null;
  };
  media?: {
    banner?: string | Media | null;
  };
  guild?: {
    guildId?: string | null;
    channels?: {
      announcements?: string | null;
      lab?: string | null;
      notifications?: string | null;
      inventory?: string | null;
      audit?: string | null;
      events?: string | null;
      leadership?: string | null;
    };
    defaultRole?: string | null;
    notificationRoles?: {
      lab?: (string | null) | Role;
      workshop?: (string | null) | Role;
      project?: (string | null) | Role;
    };
  };
  processDms: boolean;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface CAS {
  id: string;
  username?: string | null;
  password?: string | null;
  duoDeviceName?: string | null;
  hotpSecret?: string | null;
  hotpCounter: number;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface Wishlist {
  id: string;
  wishlist?:
    | {
        type?: (string | null) | Description;
        quantity?: number | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface Odoo {
  id: string;
  url?: string | null;
  db?: string | null;
  uid?: number | null;
  password?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface Trello {
  id: string;
  key?: string | null;
  secret?: string | null;
  token?: string | null;
  organization?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface Gapi {
  id: string;
  clientId?: string | null;
  clientSecret?: string | null;
  refreshToken?: string | null;
  eventsCalendarId?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}